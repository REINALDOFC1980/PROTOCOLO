@model CondutorInfrator.Models.PessoaViewModel


@using (Html.BeginForm("", "", FormMethod.Post, new { id = "form", name = "form", autocomplete = "off", AutoCompleteType = "Disabled" }))
{
    @Html.AntiForgeryToken();

    <div class="container">
        <div class="conteudo">
            <div class="row">
                <div class="col-md-11" style="margin-left:-28px; font-style: italic">
                    <h5 style="margin-left:20px;">
                        <img src="~/img/Assitente.png"/>
                        <label class="text-danger">Atenção!</label><br />
                        <strong> <label id="LabelPassoaPasso" style="color: #168eea;cursor: pointer; "> Clique Aqui </label> para verificar o passo a passo de como efetuar o seu cadastro e ao final confimar no link "Eu Concordo". </strong>
                    </h5>
                </div>
            </div>
            <hr>
            <div class="row">
                <div class="col-md-9">
                    <h3>Cadastro de Pessoa Física</h3>
                </div>
                @*<div class="col-md-3 text-right" style="font-style: italic">
                    <img src="~/img/Assitente (1).png" /><strong>Mais informações? @Html.ActionLink("Clique aqui!", "informacao_importante", "pessoa")</strong>
                </div>*@
            </div>
            <br />
            <div class="row">
                bg-upload.jpg
                <br />
                <div class="col-md-2" id="DivPes_CPF_CNPJ">
                    <text id="label_cpf">CPF</text> <span style="color:red">*</span>
                    @Html.EditorFor(model => model.Pes_CPF_CNPJ, new { htmlAttributes = new { @class = "form-control", id = "Pes_CPF_CNPJ", maxlength = 11, required = true } })
                    @Html.EditorFor(model => model.Pes_TipoPessoa, new { htmlAttributes = new { @class = "form-control", id = "Pes_TipoPessoa", style = "display:none", @Value = "FÍSICA" } })
                    @Html.ValidationMessageFor(model => model.Pes_CPF_CNPJ)
                    <div class="alert-box failure text text-center" id="vPes_CPF_CNPJ">Campo Obrigatório</div>
                    <span id="resposta"></span>
                </div>
                <div class="col-md-3" id="DivPes_Nome">
                    @Html.DisplayNameFor(model => model.Pes_Nome) <span style="color:red">*</span>
                    @Html.EditorFor(model => model.Pes_Nome, new { htmlAttributes = new { @class = "form-control", id = "Pes_Nome", autocomplete = "off", maxlength = 100, required = true } })
                    <div class="alert-box failure text-center" id="vPes_Nome">Campo Obrigatório</div>
                </div>
                <div class="col-md-2" id="DivPes_RegistroCNH">
                    @Html.DisplayNameFor(model => model.Pes_RegistroCNH)
                    @Html.EditorFor(model => model.Pes_RegistroCNH, new { htmlAttributes = new { @class = "form-control", id = "Pes_RegistroCNH", maxlength = 20 } })
                    <div class="alert-box failure text-center" id="vPes_RegistroCNH">Campo Obrigatório</div>
                </div>
                <div class="col-md-1" id="DivPes_UF_CNH">
                    @Html.DisplayNameFor(model => model.Pes_UF_CNH)
                    @Html.EditorFor(model => model.Pes_UF_CNH, new { htmlAttributes = new { @class = "form-control", id = "Pes_UF_CNH", maxlength = 2 } })
                    <div class="alert-box failure text-center" id="vPes_UF_CNH">Campo Obrigatório</div>
                </div>

                <div class="col-md-2" id="DivPes_CNHValidade">
                    @Html.DisplayNameFor(model => model.Pes_CNHValidade)
                    @Html.EditorFor(model => model.Pes_CNHValidade, new { htmlAttributes = new { @class = "form-control", id = "Pes_CNHValidade", attrname = "Date", @maxlength = 10, @minlength = 10 } })
                    <div class="alert-box failure text-center" id="vPes_CNHValidade">Campo Obrigatório</div>
                </div>
                <div class="col-md-2" id="DivPes_RG">
                    @Html.DisplayNameFor(model => model.Pes_RG) <span style="color:red">*</span>
                    @Html.EditorFor(model => model.Pes_RG, new { htmlAttributes = new { @class = "form-control", id = "Pes_RG", maxlength = 20, required = true } })
                    <div class="alert-box failure text-center" id="vPes_RG">Campo Obrigatório</div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-2" id="DivEnd_CEP">
                    @Html.DisplayNameFor(model => model.End_CEP) <span style="color:red">*</span>
                    @Html.EditorFor(model => model.End_CEP, new { htmlAttributes = new { @class = "form-control", id = "End_CEP", attrname = "CEP", @maxlength = 10, autocomplete = "off", AutoCompleteType = "Disabled", required = true } })
                    <div class="alert-box failure text-center" id="vEnd_CEP">Campo Obrigatório</div>
                </div>

                <div class="col-md-6" id="DivEnd_Logradouro">
                    @Html.DisplayNameFor(model => model.End_Logradouro) <span style="color:red">*</span>
                    @Html.EditorFor(model => model.End_Logradouro, new { htmlAttributes = new { @class = "form-control", id = "End_Logradouro", autocomplete = "off", maxlength = 100, required = true } })
                    <div class="alert-box failure text-center" id="vEnd_Logradouro">Campo Obrigatório</div>
                </div>

                <div class="col-md-1" id="DivEnd_Numero">
                    @Html.DisplayNameFor(model => model.End_Numero)
                    @Html.EditorFor(model => model.End_Numero, new { htmlAttributes = new { @class = "form-control", id = "End_Numero" } })
                    <div class="alert-box failure text-center" id="vEnd_Numero">Campo Obrigatório</div>
                </div>

                <div class="col-md-3" id="DivEnd_Bairro">
                    @Html.DisplayNameFor(model => model.End_Bairro) <span style="color:red">*</span>
                    @Html.EditorFor(model => model.End_Bairro, new { htmlAttributes = new { @class = "form-control", id = "End_Bairro", maxlength = 100, required = true } })
                    <div class="alert-box failure text-center" id="vEnd_Bairro">Campo Obrigatório</div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-3" id="DivEnd_Cidade">
                    @Html.DisplayNameFor(model => model.End_Cidade) <span style="color:red">*</span>
                    @Html.EditorFor(model => model.End_Cidade, new { htmlAttributes = new { @class = "form-control", id = "End_Cidade", @readonly = "readonly", required = true } })
                    <div class="alert-box failure text-center" id="vEnd_Cidade">Campo Obrigatório</div>
                </div>

                <div class="col-md-1" id="DivEnd_Estado">
                    @Html.DisplayNameFor(model => model.End_Estado) <span style="color:red">*</span>
                    @Html.EditorFor(model => model.End_Estado, new { htmlAttributes = new { @class = "form-control", id = "End_Estado", @readonly = "readonly", required = true } })
                    <div class="alert-box failure text-center" id="vEnd_Estado">Campo Obrigatório</div>
                </div>

                <div class="col-md-2" id="DivEnd_Pais">
                    @Html.DisplayNameFor(model => model.End_Pais) <span style="color:red">*</span>
                    @Html.EditorFor(model => model.End_Pais, new { htmlAttributes = new { @class = "form-control", id = "End_Pais", maxlength = 100, required = true, @readonly = "readonly", Value = "BRASIL" } })
                    <div class="alert-box failure text-center" id="vEnd_Pais">Campo Obrigatório</div>
                </div>

                <div class="col-md-4">
                    @Html.DisplayNameFor(model => model.End_Complemento)
                    @Html.EditorFor(model => model.End_Complemento, new { htmlAttributes = new { @class = "form-control", id = "End_Complemento", maxlength = 200 } })
                </div>


                <div class="col-md-2" id="DivPes_Telefone">
                    @Html.DisplayNameFor(model => model.Pes_Telefone) <span style="color:red">*</span>
                    @Html.EditorFor(model => model.Pes_Telefone, new { htmlAttributes = new { @class = "form-control", id = "Pes_Telefone", attrname = "telephone2", required = true } })
                    <div class="alert-box failure text-center" id="vPes_Telefone">Campo Obrigatório</div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-3" id="DivPes_Email">
                    @Html.DisplayNameFor(model => model.Pes_Email) <span style="color:red">*</span>
                    @Html.EditorFor(model => model.Pes_Email, new { htmlAttributes = new { @class = "form-control", id = "Pes_Email", onpaste = "return false", ondrop = "return false", maxlength = 100, required = true, autocomplete = "off", onfocus = "this.removeAttribute('readonly');" } })
                    <div class="alert-box failure text-center" id="vPes_Email">Campo Obrigatório</div>
                    <div class="alert-box failure text-center" id="vPes_Email_cadastrado">E-mail já cadastrado</div>

                </div>
                <div class="col-md-3" id="DivPes_Email_Confirmar">
                    @Html.DisplayNameFor(model => model.Pes_Email_Confirmar) <span style="color:red">*</span>
                    @Html.EditorFor(model => model.Pes_Email_Confirmar, new { htmlAttributes = new { @class = "form-control", id = "Pes_Email_Confirmar", style = "text-transform: toLowerCase", maxlength = 100, required = true } })
                    <div class="alert-box failure text-center" id="vPes_Email_Confirmar">Campo Obrigatório</div>
                    <div class="alert-box failure text-center" id="vPes_Email_Confirmar2">Emails diferentes</div>
                </div>
                <div class="col-md-3" id="DivUsu_Senha">
                    @Html.DisplayNameFor(model => model.Usu_Senha) <span style="color:red">*</span>
                    @Html.EditorFor(model => model.Usu_Senha, new { htmlAttributes = new { @class = "form-control", id = "Usu_Senha", required = true } })
                    <div class="alert-box failure text-center" id="vUsu_Senha">Campo Obrigatório</div>

                </div>
                <div class="col-md-3">
                    @Html.DisplayNameFor(model => model.Usu_ConfirmarSenha) <span style="color:red">*</span>
                    @Html.EditorFor(model => model.Usu_ConfirmarSenha, new { htmlAttributes = new { @class = "form-control", id = "Usu_ConfirmarSenha", required = true } })
                    <div class="alert-box failure text-center" id="vUsu_ConfirmarSenha">Senhas diferentes</div>
                </div>

            </div>

            <div class="row">

                <div class="col-md-9 h6">


                    <p>
                        <strong> ( <span style="color:red">*</span> ) Campos obrigatórios</strong>
                    </p>

                    <hr />
                    <label for="">Informações importantes</label>
                    <p>
                        • Quando for proprietário do veículo anexar um documento de identificação com foto ao lado do rosto.
                    </p>
                    <p>
                        • Quando for condutor apresentado anexar CNH (documento aberto) ao lado do rosto com assinatura visível.
                        Ao anexar os documentos obrigatórios deve seguir o formato permitido: JPEG, JPG.

                    </p>

                    <p>
                        • Certifique-se que as informações  acima estão corretas, conforme constam nos documentos pessoais e o e-mail
                        informado esteja apto para receber mensagens, sendo responsabilidade do requerente qualquer divergência que possa prejudicar o serviço.

                    </p>
                    <p>
                        • Após conferir as informações marque o campo “eu concordo”, clique em gravar dados e acesse o e-mail indicado para conclusão do cadastro.

                    </p>



                    <hr />
                    <label for="">Política de Privacidade</label>
                    <p>
                        • Declaro para os devidos fins, que as informações referentes ao cadastro para adesão ao TRANSALVADOR Digital são
                        verdadeiras, sob pena de ser responsabilizado(a) cível, penal e
                        administrativamente.
                    </p>
                    <p>
                        • Ao selecionar a opção "Eu concordo", você concorda com os Termos da Superintendência de Trânsito de Salvador
                        (TRANSALVADOR).
                    </p>

                    <br />

                    <label class="pure-material-checkbox">
                        <input type="checkbox" name="ConfirmarChk" , id="ConfirmarChk" onchange="habilitar()">
                        <span>Eu concordo</span>
                    </label>

                </div>
                <div class="col-md-3 text-center">
                    <input type="file" name="PERFIL_" id="PERFIL_" style="display:none;" accept="image/jpeg">
                    <img class="caixa-upload" id="MyProfileImageFoto" name="MyProfileImageFoto" src="~/img/bg-upload.jpg" height="150" width="200" style="cursor:pointer" />
                    <p><h6><strong>Foto documento / CNH ao lado do rosto</strong></h6></p>
                </div>
            </div>
            <p></p>

            <button type="button" class="btn btn-primary btn-lg btn-transalvador" id="GravarDados" , name="GravarDados"> Gravar Dados </button>
            <button type="button" class="btn btn-primary btn-lg btn-transalvador" id="BtnSair" name="GravarDados" onclick="location.href='@Url.Action("login", "autenticacao")'"> Sair </button>
            <br />
            <br>
        </div>
    </div> <!-- /container -->

}


<!-- Modal -->

<div class="modal fade" id="modalConfirmacao" tabindex="-1" role="dialog" aria-labelledby="modalConfirmacao"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title"> PASSO A PASSO</h3>
                @*<button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>*@
            </div>
            <div class="modal-body" style="margin-bottom: 90px;">

                     <p>
                        <STRONG>PRIMEIRO PASSO: </STRONG>PREENCHA O FORMULÁRIO ABAIXO, CONFIRME OS DADOS, SELECIONE A OPÇÃO “EU CONCORDO” CASO ESTEJA DE ACORDO. APÓS CLICAR EM “GRAVAR DADOS” NA PARTE INFERIOR, AGUARDE O E-MAIL DE CONFIRMAÇÃO DO
                        SEU CADASTRO. CASO NÃO RECEBA O E-MAIL DE CONFIRMAÇÃO PODE TER HAVIDO PREENCHIMENTO INCORRETO DOS DADOS. NESTE CASO, ACESSE A TELA INICIAL “PROTOCOLO ONLINE” E ESCOLHA A OPÇÃO DE CORREÇÃO.
                    </p>
                    <p>
                        <STRONG>
                            SEGUNDO PASSO:
                        </STRONG> AO ACESSAR O E-MAIL DE CONFIRMAÇÃO CLIQUE NO LINK DE ATIVAÇÃO RECEBIDO. NESTE MOMENTO, VOCÊ SERÁ DIRECIONADO PARA A PÁGINA “PROTOCOLO ONLINE”. CASO HAJA PROBLEMA NO DIRECIONAMENTO
                        AUTOMÁTICO FAÇA O ACESSO ATRAVÉS DO SITE.
                    </p>
                    <p>
                        <STRONG>
                            TERCEIRO PASSO:
                        </STRONG> DIGITE SEUS DADOS E SENHA PARA ACESSAR A PÁGINA DE CONFIRMAÇÃO DOS DADOS. CASO AS INFORMAÇÕES ESTEJAM CORRETAS, CLIQUE NO ÍCONE “PRÓXIMO” PARA PROSSEGUIR. AS INFORMAÇÕES TAMBÉM PODERÃO SER
                        ATUALIZADAS POSTERIORMENTE, CLICANDO NO ÍCONE TRACEJADO SITUADO NA PARTE SUPERIOR DIREITO DA TELA.
                    </p>
                    <p>
                        <STRONG>QUARTO PASSO: </STRONG>
                        SELECIONE O SERVIÇO QUE DESEJA. AO ACESSAR A TELA DE SERVIÇO LEIA ATENTAMENTE AS INSTRUÇÕES E SIGA AS PRÓXIMAS ETAPAS.
                    </p>
                    <p>
                        OBSERVAÇÃO: O CADASTRO DEVE SER FEITO PELO LEGITIMADO (TITULAR DOS DOCUMENTOS) E SEU LOGIN E SENHA É PESSOAL E INTRANSFERÍVEL.
                    </p>


                    
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="btn_fechar" @*data-dismiss="modal"*@>Fechar</button>

            </div>
        

    </div>
</div>


<script src="~/Scripts/Funcoes_gr.js"></script>
<script type='text/javascript'>

    

    $(window).on('load', function () {
        $('#Pes_Email').val("");
        $('#Usu_Senha').val("");     
        $('#modalConfirmacao').modal('show');       
      
      

    });


    //verificar se ja foi realizado o processo para o ait
    $('#LabelPassoaPasso').click(function () {
        $('#modalConfirmacao').modal('show');
        //colocar na view de confirmação uma verificação para nao processar novamente
    });

    $('#btn_fechar').click(function () {
        $('#modalConfirmacao').modal('hide');
        $('#Pes_CPF_CNPJ').focus();   
        //colocar na view de confirmação uma verificação para nao processar novamente
    });

    


    function habilitar() {
        if (document.getElementById('ConfirmarChk').checked) {
            document.getElementById('GravarDados').removeAttribute("disabled");
        }
        else {
            document.getElementById('GravarDados').setAttribute("disabled", "disabled");
        }
    }


    $(document).ready(function () {
        $("input:text,form").attr("autocomplete", "false");
        $(':input').attr('data-lpignore', true);



        //Desabitando chechebox
        document.getElementById('GravarDados').setAttribute("disabled", "disabled");
        document.getElementById('ConfirmarChk').checked = false;


        //------------------------------------------------
        //Colocando Mascaras no CPF, TELEFONES e CNPJ Homologado

        var DataMask = ['99/99/9999'];
        var Data = document.querySelector('input[attrname=Date]');
        VMasker(Data).maskPattern(DataMask[0]);
        Data.addEventListener('input', func_inputHandler.bind(undefined, DataMask, 10), false);

        var telMask2 = ['(99) 9999-99999', '(99) 99999-9999'];
        var tel2 = document.querySelector('input[attrname=telephone2');
        VMasker(tel2).maskPattern(telMask2[0]);
        tel2.addEventListener('input', func_inputHandler.bind(undefined, telMask2, 14), false);

        var CepMask = ['99.999-999',];
        var Cep = document.querySelector('input[attrname=CEP');
        VMasker(Cep).maskPattern(CepMask[0]);
        Cep.addEventListener('input', func_inputHandler.bind(undefined, CepMask, 10), false);


        //------------------------------------------------

        //letras minusculas
        $("#Pes_Email").on("input", function () {
            $(this).val($(this).val().toLowerCase());
        });

        $("#Pes_Email_Confirmar").on("input", function () {
            $(this).val($(this).val().toLowerCase());
        });



        //controle de focos
        $("#End_Numero").blur(function () {
            if ($("#End_Bairro").val() != "")
                $('#End_Complemento').focus();
            else
                $('#End_Bairro').focus();
        });

        $("#End_Bairro").blur(function () {
                $('#End_Complemento').focus();
        });


        $("#End_Pais").blur(function () {
            if ($('#Pes_Estrangeiro').val() == "Sim") {
                $('#Pes_Telefone ').focus();
            }
        });

        //Apenas Numero
        $('#Pes_CPF_CNPJ').keyup(function () {
            $(this).val(this.value.replace(/\D/g, ''));
        });

        $('#Pes_RG').keyup(function () {
            $(this).val(this.value.replace(/\D/g, ''));
        });

        $('#End_Numero').keyup(function () {
            $(this).val(this.value.replace(/\D/g, ''));
        });


        //Bloqueio do Copia Colar
        $(document).ready(function () {
            $('#Pes_Email').bind('cut copy paste', function (event) {
                event.preventDefault();
            });
        });




        //Upload de imagem
        $('#MyProfileImageFoto').click(function () {
            $('#PERFIL_').click();
            $("#PERFIL_").change(function () {
                var formato = this.files[0].type;
                if (formato != "image/jpeg" && formato != "image/jpg") {
                    swal("Formato inválido!", "Apenas imagem no formato (jpeg ou jpg).", "warning");
                    return false;
                }

                var FileSize = this.files[0].size / 1024 / 1024; // in MB
                if (FileSize > 2) {
                    swal("Tamanho inválido!", "Envio de imagem até 2 Mb.", "warning");
                    $(file).val('')
                    return false;
                }
                func_upload('PERFIL_', '#MyProfileImageFoto');
            });
        });


        $("#Pes_CPF_CNPJ").blur(function () {

            //validaçao cpf
            if ($("#Pes_CPF_CNPJ").val() != "") {
                preLoad();
                var validador_cpf = new func_validador_cpf();
                var result = validador_cpf.valida($(this).val())
                if (result == "False") {
                    posLoad();
                    swal("CPF Inválido!", "Necessário preencher o CPF corretamente.", "erro")
                        .then(function () {
                            swal.close();
                            $('#Pes_CPF_CNPJ').val('')
                            $('#Pes_CPF_CNPJ').focus();
                        });
                    return false;
                };
            };

            //Cadastro Existentes da CNH Homologado
            if ($("#Pes_CPF_CNPJ").val() != "") {
                preLoad();
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({ _cpf: $("#Pes_CPF_CNPJ").val(), tipo: "CPF" }),
                    url: '@Url.Action("pesquisardadoscnh", "pessoa")',//verifica se existe e pegando os dados da CHN na base do Detran

                    success: function (data) {
                        if (data.error == true) {
                            posLoad();
                            // swal("Ops!", "Houve uma falha de comunicação com o DETRAN, por favor tente novamente mais tarde.", "error");
                            $('#Nome').focus();
                            //$('#Pes_CPF_CNPJ').val("");
                            return false;
                        } else
                        if (data.existe == true) {
                            posLoad();
                            swal("Ops!", "Esse usuário já foi cadastrado em nossa base de dados.", "warning")
                                .then(() => {
                                    $('#DivPes_CPF_CNPJ').addClass('has-error');
                                    func_limparcampos();
                                    $("#Pes_CPF_CNPJ").focus();
                                    $("#End_Pais").val('BRASIL');
                                });
                            return false;
                        } else {
                            $(data.Resultado).each(function () {
                                $("#Pes_RegistroCNH").val(this.registro);
                                $("#Pes_CNHValidade").val(this.validade);
                                $("#Pes_Nome").val(this.nome);
                                $("#Pes_UF_CNH").val(this.enderecoUF);

                                if ($("#Pes_Nome").val() != '') {
                                    $("#Pes_RG").focus();
                                }
                                posLoad();
                            });
                            posLoad();
                        }
                    },

                    error: function () {
                    posLoad();
                    swal("Ops!", "Houve uma falha de comunicação, por favor tente novamente mais tarde. ", "error")
                    .then(() => {
                        location.reload();
                    });
                    }
                });

            }
        });
        //Fim


        //tratamento valor minimo
        $('#Pes_CNHValidade').blur(function () {
            if ($('#Pes_CNHValidade').val() != "") {
                if ($('#Pes_CNHValidade').val().length < 10) {
                    swal("Formato inválido!", "Favor preencher o campo corretamente.", "").then(() => {
                        $('#Pes_CNHValidade').focus();
                    });
                    return false;
                };
                //validando DATA
                if (verificaData($('#Pes_CNHValidade').val()) == false) {
                    swal("Data inexistente!", "Favor preencher o campo corretamente.", "").then(() => {
                        $('#Pes_CNHValidade').focus();
                    });
                };

            }
        });

        //tratamento valor minimo
        $('#Pes_Celular').blur(function () {
            if ($('#Pes_Celular').val() != "") {
                if ($('#Pes_Celular').val().length < 14) {
                    swal("Formato inválido!", "Favor preencher o campo corretamente.", "").then(() => {
                        $('#Pes_Celular').focus();
                    });

                    return false;
                };
            }
        });

        //Verificaçao de email valido e existente
       $('#Pes_Email').blur(function () {

           if ($('#Pes_Email').val() != "") {

               //VidandoEmail
               var resultado = func_validandoemail($("#Pes_Email").val());

               if (resultado == false) {
                   swal("E-mail inválido", "Necessário informar um e-mail válido.", "warning").then(() => {
                       $('#DivPes_Email').addClass('has-error');
                       $('#Pes_Email').focus();
                       $('#Pes_Email').val("");
                   });
               }
               else
               {
                   preLoad();
                   //Verificando se existe o email
                   $.ajax({
                       type: "POST",
                       contentType: "application/json; charset=utf-8",
                       data: JSON.stringify({ VloBusca1: $("#Pes_Email").val() }),
                       url: '@Url.Action("BuscarDadosPessoa", "pessoa")',

                       success: function (data) {

                           if (data.error == true) {
                               posLoad();
                               swal("Ops!", "Houve uma falha de comunicação, por favor tente novamente mais tarde.", "error");
                               $('#Pes_Email').focus();
                               $('#Pes_Email').val("");
                               return false;
                           }
                           else {
                               $(data.Resultado).each(function () {
                                   if (this.Email == 1) {
                                       posLoad();
                                       campo_obrigatorio('#vPes_Email_cadastrado', '#DivPes_Email', '#Pes_Email');
                                       return false;
                                   }
                               })
                           }
                           posLoad();
                       },
                       error: function () {
                             posLoad();
                             swal("Ops!", "Houve uma falha de comunicação, por favor tente novamente mais tarde. ", "error")
                            .then(() => {
                                location.reload();
                            });
                       },
                   });
               };
           };
        });



        //Validaçao,comparando os campos
        $('#Pes_Email_Confirmar').blur(function () {

            if ($('#Pes_Email_Confirmar').val() != "") {
                if ($('#Pes_Email').val() != $('#Pes_Email_Confirmar').val()) {
                    posLoad();
                    campo_obrigatorio('#vPes_Email_Confirmar2', '#DivPes_Email_Confirmar', '#Pes_Email_Confirmar');
                    $('#Pes_Email_Confirmar').focus();

                    return false;
                };
            }

        });
        $('#Usu_ConfirmarSenha').blur(function () {
            if ($('#Usu_ConfirmarSenha').val() != "") {
                if ($('#Usu_Senha').val() != $('#Usu_ConfirmarSenha').val()) {
                    posLoad();
                    campo_obrigatorio('#vUsu_ConfirmarSenha', '#DivUsu_ConfirmarSenha', '#Usu_ConfirmarSenha');
                    $('#Usu_ConfirmarSenha').focus();

                    return false;
                }
            }

        });
   });


    //------------------------------------------------
    //https//pt.stackoverflow.com/questions/110623/exibir-mensagem-e-esconder-em-alguns-segundos
    // SALVAR
    $('#GravarDados').click(function () {

        // Validando os campos em brancos
        var is_empty = false;
        var campo;
        $('[required]').each(function (idx, elem) {
            is_empty = is_empty || ($(elem).val() == '');
            if (is_empty) {
                campo = $(elem).attr('id');
                $(elem).focus();
                return false
            }
        });

        if (is_empty) {
            campo_obrigatorio('#v' + campo, '#Div' + campo, campo);
        } else {

            if ($('#Pes_CNHValidade').val() != "" && $('#Pes_RegistroCNH').val() == "") {
                campo_obrigatorio('#vPes_RegistroCNH', '#DivPes_RegistroCNH', '#Pes_RegistroCNH');
                return false;
            };
            if ($('#Pes_CNHValidade').val() != "" && $('#Pes_UF_CNH').val() == "") {
                campo_obrigatorio('#vPes_UF_CNH', '#DivPes_UF_CNH', '#Pes_UF_CNH');
                return false;
            };

            if ($('#Pes_RegistroCNH').val() != "" && $('#Pes_CNHValidade').val() == "") {
                campo_obrigatorio('#vPes_CNHValidade', '#DivPes_CNHValidade', '#Pes_CNHValidade');
                return false;
            };
            //foto perfil se é ou nao obrigatória
            if ($('#PERFIL_').val() == "" && $('#Pes_RegistroCNH').val() != "") {
                swal("Ops!", "Não foi anexada foto!", "warning")
                return false;
            }

            preLoad();
            var form = $('form')[0];
            var fileData = new FormData(form);

            $.ajax({
                type: "POST",
                url: '@Url.Action("RotinaSalvarPF", "pessoa")',//Upload, Insert, Envio Email
                dataType: "json",
                contentType: false, // Not to set any content header
                processData: false, // Not to process data
                data: fileData,
                success: function (data) {
                    if (data.error == true) {
                        posLoad();
                        swal("Ops!", "Houve uma falha de comunicação, por favor tente novamente mais tarde.", "error");
                        return false;
                    }else
                    if (data.formatoimg == false) {
                            posLoad();
                        swal("Ops!", "Essa imagem está corrompido ou em um formato errado, o sistema só aceita formato JPEG/JPG.", "error");
                            return false;
                    }
                    else {
                        posLoad();
                        swal("Cadastro realizado com sucesso!", "Verifique seu e-mail para ativar a conta. Ao acessar deverá clicar no link que aparecerá na mensagem. Caso a mesma esteja inoperante, acesse a internet e digite todo o endereço para a conclusão.", "success")
                        .then(() => {
                            window.location.href = data.redirectUrl;
                        });
                    }
                },

                error: function () {
                     posLoad();
                     swal("Ops!", "Houve uma falha de comunicação, por favor tente novamente mais tarde. ", "error")
                    .then(() => {
                        location.reload();
                    });
                }
            })
        }
    });

</script>

