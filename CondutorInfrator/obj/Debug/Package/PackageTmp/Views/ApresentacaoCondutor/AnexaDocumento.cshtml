@model CondutorInfrator.Models.ProcessoViewModel

@{
    var claimsIdentity = User.Identity as System.Security.Claims.ClaimsIdentity;
    var Pes_TipoPessoa = claimsIdentity.FindFirst(System.Security.Claims.ClaimTypes.Role).Value;
}

<div class="container">

    <div class="conteudo">


        @*<div class="row">
            <div class="col-md-12 text-center">
                <p class="numero-protocolo">
                    N° Processo: @Html.DisplayFor(model => model.Pro_Numero, new { htmlAttributes = new { @class = "form-control", id = "Pro_Numero" } })
                    @Html.EditorFor(model => model.Pro_Numero, new { htmlAttributes = new { @class = "form-control", id = "Pro_Numero_", style = "display:none" } })
                </p>
            </div>
        </div>*@

        <div class="row">
            <div class="col-md-1 text-center">
                <img src="~/img/Assitente.png" />
            </div>
            <div class="col-md-11" style="margin-left:-28px; font-style: italic">
                <h5><strong>Etapa Final! Agora é anexar os documentos, finalizar o processo e aguardar o aceite do Condutor Infrator.</strong></h5>
                <h5>O condutor apresentado tem um <strong>prazo de (3) dias </strong>a contar da data de envio da solicitação, desde que não ultrapasse a data de vencimento da Notificação de Autuação Infração – NA, para acessar o sistema e aceitar a indicação.</h5>
            </div>
        </div>
        <hr>
        <div class="row">
            @{
                var status = Model.StsPro_Descricao;
                if (status == "Liberado para Correção")

                {<div class="row">
                        <div class="col-md-9">
                            <div class="lista-situacao">
                                <ul>
                                    <li class="ativo">
                                        <span>#</span>
                                        <h2>Status Atual do Processo:</h2>
                                        <p>
                                            <br>
                                            <a id="mytooltip" data-toggle="tooltip" title="@Html.DisplayFor(model => model.StsPro_Orientacao, new { htmlAttributes = new { @class = "form-control", id = "StsPro_Orientacao", } })"
                                               data-placement="right">@Html.DisplayFor(model => model.StsPro_Descricao, new { htmlAttributes = new { @class = "form-control", id = "StsPro_Descricao", } })</a>
                                            <br>
                                            <strong> @Html.DisplayFor(model => model.Motivo_reprovacao, new { htmlAttributes = new { @class = "form-control", id = "Motivo_reprovacao" } })</strong>

                                        </p>

                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                }

            }
        </div>
        <div class="row">
            <div class="col-md-8">
                <h3>Anexar Documento</h3>
            </div>
            <div class="col-md-4 text-right text-danger" @*style="font-style: italic"*@>
                <h5>
                    <small style="color:red">INFORMAÇÕES IMPORTANTES!</small><br />
                    <strong>LEIA ANTES DE INICIAR O PROCESSO <label id="LabelPassoaPasso" class="text-primary" style="cursor: pointer"> Clique Aqui </label> </strong>
                </h5>
            </div>
        </div>
        <br />


        @using (Html.BeginForm("", "", FormMethod.Post, new { id = "formGerarProcesso", name = "formGerarProcesso" }))
        {
            <div class="row">
                <div class="col-md-6">
                    <h3>Informações do Condutor Infrator</h3>
                    <table class="table table-borderless">
                        <tbody>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Con_CPF)</th>
                                <td>@Html.DisplayFor(model => model.Con_CPF, new { htmlAttributes = new { @class = "form-control", id = "Con_CPF" } })</td>
                                <td>@Html.HiddenFor(model => model.Con_CPF, new { id = "Con_CPF", name = "Con_CPF" })</td>
                                <td>@Html.HiddenFor(model => model.Pro_Numero, new { id = "Pro_Numero", name = "Pro_Numero" })</td>
                                <td>@Html.HiddenFor(model => model.StsPro_Descricao)</td>

                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Con_Nome)</th>
                                <td>@Html.DisplayFor(model => model.Con_Nome, new { htmlAttributes = new { @class = "form-control", id = "Con_Nome" } })</td>
                                <td>@Html.HiddenFor(model => model.Con_Nome)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Con_RegistroCNH)</th>
                                <td>@Html.DisplayFor(model => model.Con_RegistroCNH, new { htmlAttributes = new { @class = "form-control", id = "Con_RegistroCNH" } })</td>
                                <td>@Html.HiddenFor(model => model.Con_RegistroCNH)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Con_CNHValidade)</th>
                                <td>@Html.DisplayFor(model => model.Con_CNHValidade, new { htmlAttributes = new { @class = "form-control", id = "Con_CNHValidade" } })</td>
                                <td>@Html.HiddenFor(model => model.Con_CNHValidade)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Con_EndPro_Logradouro)</th>
                                <td>@Html.DisplayFor(model => model.Con_EndPro_Logradouro, new { htmlAttributes = new { @class = "form-control", id = "Con_EndPro_Logradouro" } })</td>
                                <td>@Html.HiddenFor(model => model.Con_EndPro_Logradouro)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Con_EndPro_Bairro)</th>
                                <td>@Html.DisplayFor(model => model.Con_EndPro_Bairro, new { htmlAttributes = new { @class = "form-control", id = "Con_EndPro_Bairro" } })</td>
                                <td>@Html.HiddenFor(model => model.Con_EndPro_Bairro)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Con_EndPro_Complemento)</th>
                                <td>@Html.DisplayFor(model => model.Con_EndPro_Complemento, new { htmlAttributes = new { @class = "form-control", id = "Con_EndPro_Complemento" } })</td>
                                <td>@Html.HiddenFor(model => model.Con_EndPro_Complemento)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Con_EndPro_Cidade)</th>
                                <td>@Html.DisplayFor(model => model.Con_EndPro_Cidade, new { htmlAttributes = new { @class = "form-control", id = "Con_EndPro_Cidade" } })</td>
                                <td>@Html.HiddenFor(model => model.Con_EndPro_Cidade)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Con_EndPro_Estado)</th>
                                <td>@Html.DisplayFor(model => model.Con_EndPro_Estado, new { htmlAttributes = new { @class = "form-control", id = "Con_EndPro_Estado" } })</td>
                                <td>@Html.HiddenFor(model => model.Con_EndPro_Estado)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Con_EndPro_CEP)</th>
                                <td>@Html.DisplayFor(model => model.Con_EndPro_CEP, new { htmlAttributes = new { @class = "form-control", id = "Con_EndPro_CEP" } })</td>
                                <td>@Html.HiddenFor(model => model.Con_EndPro_CEP)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Con_Telefone)</th>
                                <td>@Html.DisplayFor(model => model.Con_Telefone, new { htmlAttributes = new { @class = "form-control", id = "Con_Telefone" } })</td>
                                <td>@Html.HiddenFor(model => model.Con_Telefone)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Con_Email)</th>
                                <td>@Html.DisplayFor(model => model.Con_Email, new { htmlAttributes = new { @class = "form-control", id = "Con_Email" } })</td>
                                <td>@Html.HiddenFor(model => model.Con_Email)</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="col-md-6">
                    <h3>Informações do Requerente</h3>
                    <table class="table table-borderless">
                        <tbody>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Ptr_CPF_CNPJ)</th>
                                <td>@Html.DisplayFor(model => model.Ptr_CPF_CNPJ, new { htmlAttributes = new { @class = "form-control", id = "Ptr_CPF_CNPJ" } })</td>
                                <td>@Html.HiddenFor(model => model.Ptr_CPF_CNPJ)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Ptr_Nome)</th>
                                <td>@Html.DisplayFor(model => model.Ptr_Nome, new { htmlAttributes = new { @class = "form-control", id = "Ptr_Nome" } })</td>
                                <td>@Html.HiddenFor(model => model.Ptr_Nome, new { id = "Ptr_Nome", name = "Ptr_Nome" })</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Ptr_RegistroCNH)</th>
                                <td>@Html.DisplayFor(model => model.Ptr_RegistroCNH, new { htmlAttributes = new { @class = "form-control", id = "Pes_RegistroCNH" } })</td>
                                <td>@Html.HiddenFor(model => model.Ptr_RegistroCNH)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Ptr_CNHValidade)</th>
                                <td>@Html.DisplayFor(model => model.Ptr_CNHValidade, new { htmlAttributes = new { @class = "form-control", id = "Pes_CNHValidade" } })</td>
                                <td>@Html.HiddenFor(model => model.Ptr_CNHValidade)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Ptr_EndPro_Logradouro)</th>
                                <td>@Html.DisplayFor(model => model.Ptr_EndPro_Logradouro, new { htmlAttributes = new { @class = "form-control", id = "Ptr_EndPro_Logradouro" } })</td>
                                <td>@Html.HiddenFor(model => model.Ptr_EndPro_Logradouro)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Ptr_EndPro_Bairro)</th>
                                <td>@Html.DisplayFor(model => model.Ptr_EndPro_Bairro, new { htmlAttributes = new { @class = "form-control", id = "Ptr_EndPro_Bairro" } })</td>
                                <td>@Html.HiddenFor(model => model.Ptr_EndPro_Bairro)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Ptr_EndPro_Complemento)</th>
                                <td>@Html.DisplayFor(model => model.Ptr_EndPro_Complemento, new { htmlAttributes = new { @class = "form-control", id = "Ptr_EndPro_Complemento" } })</td>
                                <td>@Html.HiddenFor(model => model.Ptr_EndPro_Complemento)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Ptr_EndPro_Cidade)</th>
                                <td>@Html.DisplayFor(model => model.Ptr_EndPro_Cidade, new { htmlAttributes = new { @class = "form-control", id = "Ptr_EndPro_Cidade" } })</td>
                                <td>@Html.HiddenFor(model => model.Ptr_EndPro_Cidade)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Ptr_EndPro_Estado)</th>
                                <td>@Html.DisplayFor(model => model.Ptr_EndPro_Estado, new { htmlAttributes = new { @class = "form-control", id = "Ptr_EndPro_Estado" } })</td>
                                <td>@Html.HiddenFor(model => model.Ptr_EndPro_Estado)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Ptr_EndPro_CEP)</th>
                                <td>@Html.DisplayFor(model => model.Ptr_EndPro_CEP, new { htmlAttributes = new { @class = "form-control", id = "Ptr_EndPro_CEP" } })</td>
                                <td>@Html.HiddenFor(model => model.Ptr_EndPro_CEP)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Ptr_Telefone)</th>
                                <td>@Html.DisplayFor(model => model.Ptr_Telefone, new { htmlAttributes = new { @class = "form-control", id = "Ptr_Telefone" } })</td>
                                <td>@Html.HiddenFor(model => model.Ptr_Telefone)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Ptr_Email)</th>
                                <td>@Html.DisplayFor(model => model.Ptr_Email, new { htmlAttributes = new { @class = "form-control", id = "Ptr_Emai" } })</td>
                                <td>@Html.HiddenFor(model => model.Ptr_Email)</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <h3>Informações do Veículo</h3>
                    <table class="table table-borderless">
                        <tbody>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Vec_Placa)</th>
                                <td>@Html.DisplayFor(model => model.Vec_Placa, new { htmlAttributes = new { @class = "form-control", id = "Vec_Placa" } })</td>
                                <td>@Html.HiddenFor(model => model.Vec_Placa)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Vec_RENAVAN)</th>
                                <td>@Html.DisplayFor(model => model.Vec_RENAVAN, new { htmlAttributes = new { @class = "form-control", id = "Vec_RENAVAN" } })</td>
                                <td>@Html.HiddenFor(model => model.Vec_RENAVAN)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Vec_Ano)</th>
                                <td>@Html.DisplayFor(model => model.Vec_Ano, new { htmlAttributes = new { @class = "form-control", id = "Vec_Ano" } })</td>
                                <td>@Html.HiddenFor(model => model.Vec_Ano)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Vec_Marca)</th>
                                <td>@Html.DisplayFor(model => model.Vec_Marca, new { htmlAttributes = new { @class = "form-control", id = "Vec_Marca" } })</td>
                                <td>@Html.HiddenFor(model => model.Vec_Marca)</td>
                            </tr>

                        </tbody>
                    </table>
                </div>
                <div class="col-md-6">
                    <h3>Informações da Multa</h3>
                    <table class="table table-borderless">
                        <tbody>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Mut_AIT)</th>
                                <td>@Html.DisplayFor(model => model.Mut_AIT, new { htmlAttributes = new { @class = "form-control", id = "Mut_AIT" } })</td>
                                <td>@Html.HiddenFor(model => model.Mut_AIT, new { @id = "Mut_AIT", @name = "Mut_AIT" })</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Mut_CodigoInfracao)</th>
                                <td>@Html.DisplayFor(model => model.Mut_CodigoInfracao, new { htmlAttributes = new { @class = "form-control", id = "Mut_CodigoInfracao" } })</td>
                                <td>@Html.HiddenFor(model => model.Mut_CodigoInfracao)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Mut_DataInfracao)</th>
                                <td>@Html.DisplayFor(model => model.Mut_DataInfracao, new { htmlAttributes = new { @class = "form-control", id = "Mut_DataInfracao" } })</td>
                                <td>@Html.HiddenFor(model => model.Mut_DataInfracao)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Mut_DescricaoInfracao)</th>
                                <td>@Html.DisplayFor(model => model.Mut_DescricaoInfracao, new { htmlAttributes = new { @class = "form-control", id = "Mut_DescricaoInfracao" } })</td>
                                <td>@Html.HiddenFor(model => model.Mut_DescricaoInfracao)</td>
                            </tr>
                            <tr>
                                <th scope="row"> @Html.DisplayNameFor(model => model.Mut_StatusAIT)</th>
                                <td>@Html.DisplayFor(model => model.Mut_StatusAIT, new { htmlAttributes = new { @class = "form-control", id = "Mut_StatusAIT" } })</td>
                                <td>@Html.HiddenFor(model => model.Mut_StatusAIT)</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <br />
            <div class="col-md-12">
                <div>
                    <div class="title_box" id="subject">
                        <div id="title" class="text-danger"><strong>INFORMAÇÃO IMPORTANTE</strong> </div>
                        <div id="content">
                            Tenha em mãos toda documentação necessária, pois a abertura do processo é imediata após confirmação dos termos e finalização dos procedimentos.<br />
                            Caso não seja finalizada a abertura do processo, será necessário refazer todo procedimento.<br />
                            A numeração do Controle Interno (CI) só será gerada após finalização da abertura.<br />
                            Após clicar em “Finalizar Abertura do Serviço WEB”, não será mais possível realizar alterações.<br />
                            <br />
                            <label class="pure-material-checkbox">
                                <input type="checkbox" name="ConfirmarChk" , id="ConfirmarChk" onchange="habilitar()">
                                <span>Declaro que li e estou ciente das informações acima.</span>
                            </label>
                        </div>
                    </div>
                </div>
                <br><br>
                <div class="text-center">
                    <button type="button" class="btn btn-default" id="BtSair" data-dismiss="modal">Sair</button>
                    <button type="button" class="btn btn-primary btn-lg btn-transalvador" id="BtnFormulario" onclick="ImpressaoAgendamento()"> Imprimir Formulário</button>
                    <button type="button" class="btn btn-success btn-lg" data-toggle="modal" id="BtnDocumento">Enviar Documentação</button>
                    <br /><br />
                    <strong style="color:red">
                        Atenção!
                    </strong>
                    <label>
                        Imprimir o formulário NA eletrônico caso não possua a Notificação de Autuação original (NA via amarela).
                    </label>

                </div>
            </div>
            <br>
            <br><br><br><br><br><br><br><br><br><br><br>
            <!-- Modal -->

            <div class="modal fade" id="modalDocumentacao" tabindex="-1" role="dialog" aria-labelledby="modalArquivos" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="col-md-3" style="padding: 0;">
                        <div class="alerta-documentacao text-center">
                            <img src="~/img/upload.svg" width="120">
                        </div>
                    </div>
                    <div class="col-md-9" style="padding:0;">
                        <div class="mensagem-modal modal-documentacao">
                            <h4 class="text-center">Envio dos Documentos</h4>
                            <div class="row" style="font-size:80%;">

                                <div class="col-md-12 text-center" style="margin-top:5px;">
                                    <p><strong>Foto do Condutor Infrator com CNH</strong></p>
                                    <img id="MyfileControlFoto" name="MyfileControlFoto" src="@Url.Action("buscar_FotoPerfil_Condutor", "apresentacaocondutor", new { con_cpf = Model.Con_CPF})" height="110" width="120" class="caixa-upload" style="cursor:pointer" />
                                </div>

                                <div class="col-md-12" style="margin-top:10px;">
                                    <p><strong><span style="color:red">Prezado Cidadão, certifique-se que o formato original é o JPEG ou JPG. 
                                        Caso o sistema não aceite a imagem é possível que o arquivo esteja corrompido.
                                        Sugerimos salvar o arquivo novamente em formato JPEG ou JPG e tentar o reenvio. 
                                        O arquivo não deve ultrapassar obrigatoriamente o tamanho permitido. 
                                        O sistema disponibiliza a pré-visualização de todos os documentos anexados pelo usuário, permitindo uma revisão antes do envio.
                                        Faça a revisão antes do envio.</span></strong></p>

                                    <br><small>CNH do Condutor Infrator / Formato(JPG/JPEG) <span style="color:red">*</span>  Tamanho: 2.0 Mb. </small><input type="file" class="filestyle" id="CNH_CONDUTOR" , name="CNH_CONDUTOR" data-buttonText="Anexar" accept="image/jpeg" onchange="ValidateSize(this)">
                                    <div class="alert-box failure text text-center" id="vCNH_CONDUTOR">Campo Obrigatório</div>
                                    <br><small>Notificação de Autuação - NA <small>(Formulário de indicação)</small> / Formato(JPG/JPEG)<span style="color:red">*</span>  Tamanho: 2.0 Mb.  </small><input type="file" class="filestyle" id="FORMULARIO_INDICACAO" , name="FORMULARIO_INDICACAO" data-buttonText="Anexar" accept="image/jpeg" onchange="ValidateSize(this)">
                                    <div class="alert-box failure text text-center" id="vCNH_PROPRIETARIO">Campo Obrigatório</div>
                                    <br><small>Comprovante de Residência do Condutor Infrator / Formato(JPG/JPEG) Tamanho: 2.0 Mb.  </small><input type="file" class="filestyle" id="COMPROVANTE_CONDUTOR" , name="COMPROVANTE_CONDUTOR" data-buttonText="Anexar" accept="image/jpeg" onchange="ValidateSize(this)">
                                    <div class="alert-box failure text text-center" id="vFORMULARIO_INDICACAO">Campo Obrigatório</div>
                                    <br><small>CNH ou RG do Proprietário / Formato(JPG/JPEG)<span style="color:red">*</span>  Tamanho: 2.0 Mb.  </small><input type="file" class="filestyle" id="CNH_PROPRIETARIO" , name="CNH_PROPRIETARIO" data-buttonText="Anexar" accept="image/jpeg" onchange="ValidateSize(this)">

                                </div>
                            </div>
                    

                            <a href="~/img/exemplo-pdf.pdf"></a>
                            <div class="text-left" style="font-size:12px;">
                                <br />
                                <p><strong> ( <span style="color:red">*</span> ) Campos obrigatórios</strong></p>

                                    • O condutor infrator e o proprietário do veículo respondem nas esferas penal, 
                                      cível e administrativa pela veracidade das informações e dos documentos fornecidos.<br />
                              
                                    • O proprietário deverá solicitar que o condutor dê o “aceite” no sistema WEB, caso o mesmo não tenha cadastro deverá  
                                      acessar o site da Transalvador, clicar na opção serviços on-line efetuar o cadastro e acessar o sistema para confirmar a documentação, 
                                      dados e dar o aceite.<br />
                               
                                    • Cada campo tem individualizado o tipo de documento a ser anexado, devendo o proprietário seguir essa regra.
                                      O sistema não aceita finalizar sem os anexo.
                             
                            </div>
                            <div class="col-md-12 modal-footer">
                                <div class="text-center">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal" id="BtGerarCancelar">Sair</button>
                                    <button type="button" class="btn btn-primary" id="BtGerarProcesso">Próximo</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        <!-- Modal -->
        <div class="modal fade" id="modalOrientacao" tabindex="-1" role="dialog" aria-labelledby="modalConfirmacao"
             aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title"> PASSO A PASSO</h4>

                    </div>
                    <div class="modal-body" style="margin-bottom: 90px;">
                            <h5>
                                PROPRIETÁRIO PESSOA FÍSICA
                            </h5>
                            <p>
                                <strong>
                                    É necessário que os documentos anexados no pedido estejam completos e conforme a legislação, sem rasuras e legíveis, 
                                    caso contrário será reprovado.
                                </strong>
                            </p>
                            <p>
                                Preencha os dados completos no sistema e ao finalizar imprima o formulário de indicação do condutor infrator. <br />
                                Caso não possua a NA (via amarela) o formulário NA eletrônico substitui a mesma.

                            </p>
                            <p>
                                • O formulário ou NA devem estar assinados pelo proprietário e condutor, com assinaturas originais iguais aos documentos apresentados (utilize preferencialmente caneta azul).

                            </p>                        
                            <p>
                                • A CNH do condutor deve ser original, com dados e assinaturas visíveis.
                            </p>
                            <p>
                                • Documento do proprietário deve ser legível e com assinatura visível.
                               
                            </p>
                            <p>
                                • A foto de perfil é a foto do condutor segurando a CNH aberta ao lado do rosto.
                            </p>
                            <p>
                                • Comprovante de residência dos últimos três meses em nome do condutor (IPTU, ÁGUA, LUZ, TELEFONE, TV).
                            </p>
                            <p>
                                • A solicitação de condutor web não será aberta caso haja pendência de documentação obrigatória no campo anexo.
                            </p>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Fechar</button>
                </div>
            </div>
        </div>
    </div>
    </div>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
<script src="~/Scripts/Funcoes_gr.js"></script>

<script type="text/javascript">

    document.getElementById('BtnDocumento').setAttribute("disabled", "disabled");


    function habilitar() {
        if (document.getElementById('ConfirmarChk').checked) {
            document.getElementById('BtnDocumento').removeAttribute("disabled");
        }
        else {
            document.getElementById('BtnDocumento').setAttribute("disabled", "disabled");
        }
    }

      $('#BtSair').click(function () {
         window.location.href = '@Url.Action("processosabertos", "processo")';

      });

    $('#myModal').on('shown.bs.modal', function () {
        $('#myInput').trigger('focus');
    });

    $(window).on('load', function () {
        $('#modalOrientacao').modal('show');
    });

    //verificar se ja foi realizado o processo para o ait
    $('#LabelPassoaPasso').click(function () {
       $('#modalOrientacao').modal('show');
     //colocar na view de confirmação uma verificação para nao processar novamente
    });

    function bloquearCampos(status) {

        if (status == "sim") {
            $('#BtGerarProcesso').prop('disabled', true);
            $("#BtnDocumento").prop("disabled", true);
            $('#BtGerarCancelar').prop('disabled', true);
            $('#BtnFormulario').prop('disabled', true);

            preLoad();

        } else {

            $('#BtGerarProcesso').prop('disabled', false);
            $("#BtnDocumento").prop("disabled", false);
            $('#BtGerarCancelar').prop('disabled', false);
            $('#BtnFormulario').prop('disabled', false);

            posLoad();
        }

    }


    function AnalisarAIT() {
        preLoad();
        var form = $('form')[0];
        var fileData = new FormData(form);

        $.ajax({
            type: "POST",
            url: '@Url.Action("AnalisarAIT", "ApresentacaoCondutor")',
            dataType: "json",
            contentType: false, // Not to set any content header
            processData: false, // Not to process data
            data: fileData,
            success: function (data) {
                if (data.id == 'CI_Erro_1') {
                    swal({
                        title: "Aviso!",
                        text: data.mensagem_erro,
                        icon: "warning",
                        Html: true,
                        textAlign: "left",

                        buttons: [
                            'Não',
                            'Sim'
                        ],

                    }).then((willDelete) => {
                        if (willDelete)
                            $('#modalDocumentacao').modal('show');
                        else {
                            posLoad();
                            return false;
                        }
                    });
                } else if (data.id == 'CI_Erro') {
                            posLoad();
                            swal("Ops!", data.mensagem_erro, "warning").then(() => {
                                window.location.href = '@Url.Action("processosabertos", "processo")';
                                posLoad();
                                return false;
                            });
                } else {
                    $('#modalDocumentacao').modal('show');
                    posLoad();
                       }

            },
            error: function (exception) {
                posLoad();
                bloquearCampos('não');
                swal("Ops!", "Houve uma falha de comunicação. Retorne ao status anterior, anexe novamente os documentos e reenvie. ", "error");
                posLoad()
                .then(() => {
                    posLoad();
                    location.reload();
                });
            }
        });
    }


    $('#BtnDocumento').click(function () {

        preLoad();

        var mut_ait = $('#Mut_AIT').val();
        var con_cpf = $('#Con_CPF').val();

        ///Analisar Foto e situação do AIT
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ mut_ait: mut_ait, con_cpf: con_cpf  }),
            url: '@Url.Action("analisar_fotoperfil_situacaoait", "apresentacaocondutor")',
            statusCode: {
                400: function () {
                    window.location.replace('@Url.Action("logOut", "autenticacao")')}
                },
            success: function (data) {
                if (data.error == true) {
                    bloquearCampos('não');
                    swal("Ops!", "Houve uma falha de comunicação. Retorne ao status anterior, anexe novamente os documentos e reenvie.", "error");
                    posLoad();
                    return false;

                }else
                if (data.fotoperfil == false) {
                    bloquearCampos('não');
                    swal("Ops!", "A foto do Condutor Infrator com CNH não foi localizada, favor entrar em contato com o mesmo para atualizar a foto do perfil.", "warning");
                    $('#BtGerarProcesso').prop('disabled', true);
                    posLoad();
                    return false;
                } else {
                    AnalisarAIT();
                }
            },

            error: function (exception) {
                posLoad();
                bloquearCampos('não');
                swal("Ops!", "Houve uma falha de comunicação. Retorne ao status anterior, anexe novamente os documentos e reenvie. ", "error")
                .then(() => {
                    location.reload();
                });
            }
        });
    });


    function ValidateSize(file) {
        var FileSize = file.files[0].size / 1024 / 1024; // in MB
        if (FileSize > 2) {
            swal("Tamanho inválido!", "Apenas imagem até 2 MB.", "warning");
            $(file).val('')
            return false;
        }

        var formato = file.files[0].type;

        if (formato != "image/jpeg") {
            swal("Formato inválido!", "Apenas imagem no formato (Jpeg ou JPG).", "warning");
            $(file).val('')
            return false;

        }
    }

    $(document).ready(function () {

        $("#BtGerarProcesso").click(function () {

            var TipoPessoa = $('<span/>').html('@Pes_TipoPessoa').text();

            if ($('#CNH_CONDUTOR').val() == "")
            {
                bloquearCampos('não');
                campo_obrigatorio('#vCNH_CONDUTOR', '#DivCNH_CONDUTOR', '#CNH_CONDUTOR');
                return false;
            }

            if ($('#FORMULARIO_INDICACAO').val() == "") {
                bloquearCampos('não');
                campo_obrigatorio('#vFORMULARIO_INDICACAO', '#DivFORMULARIO_INDICACAO', '#FORMULARIO_INDICACAO');
                return false;
            }

            //if ($('#COMPROVANTE_CONDUTOR').val() == "") {
            //       bloquearCampos('não');
            //       campo_obrigatorio('#vCOMPROVANTE_CONDUTOR', '#DivCOMPROVANTE_CONDUTOR', '#COMPROVANTE_CONDUTOR');
            //       return false;
            //}

            if ($('#CNH_PROPRIETARIO').val() == "") {
                bloquearCampos('não');
                campo_obrigatorio('#vCNH_PROPRIETARIO', '#DivCNH_PROPRIETARIO', '#CNH_PROPRIETARIO');
                return false;
            }



            if (   $('#CNH_CONDUTOR').val() == $('#FORMULARIO_INDICACAO').val()
                || $('#CNH_CONDUTOR').val() == $(('#CNH_PROPRIETARIO')).val
                || $('#CNH_CONDUTOR').val() == $('#COMPROVANTE_CONDUTOR').val()
                || $('#FORMULARIO_INDICACAO').val() == $('#CNH_PROPRIETARIO').val()
                || $('#FORMULARIO_INDICACAO').val() == $('#COMPROVANTE_CONDUTOR').val()
                || $('#CNH_PROPRIETARIO').val() == $('#COMPROVANTE_CONDUTOR').val()
                )
            {
                bloquearCampos('não');
                swal("Duplicidade de arquivo!", "Você está colocando o mesmo arquivo mais de uma vez.", "warning");
                return false;
            }

            preLoad();

            var form = $('form')[0];
            var fileData = new FormData(form);

            $.ajax({
                type: "POST",
                url: '@Url.Action("FinalizarProcesso", "apresentacaocondutor")',//Uplaod, insert e email
                dataType: "json",
                contentType: false, // Not to set any content header
                processData: false, // Not to process data
                data: fileData,
                success: function (data) {
                    if (data.error == true) {
                        bloquearCampos('não');
                        swal("Ops!", "Houve uma falha de comunicação. Retorne ao status anterior, anexe novamente os documentos e reenvie.", "error")
                            .then(() => {
                                location.reload();
                            });
                        return false;
                    }

                    if (data.formatoimg == false) {
                        posLoad();
                        swal("Ops!", "O anexo " + data.arq_corrompido + " está corrompido ou com o formato errado.", "error");
                        return false;
                    } else {
                        RedirectUrl(data.redirectUrl, data.pro_numero);
                        posLoad();

                      
                    }
                },
                error: function (exception) {
                    posLoad();
                    bloquearCampos('não');
                    swal("Ops!", "Houve uma falha de comunicação. Retorne ao status anterior, anexe novamente os documentos e reenvie. " + exception, "error")
                   .then(() => {
                        location.reload();
                   });
                }
            });
        });
    });


    function RedirectUrl(redirectUrl, pro_numero) {
        var form = $('<form action="' + redirectUrl + '" method="post">' +
            '<input type="hidden" name="pro_Numero" value="' + pro_numero + '" />' +
            '</form>');

        $('body').append(form);
        $(form).submit();
    }


    function ImpressaoAgendamento() {
        var numeroait = $('#Mut_AIT').val();
        swal("Atenção!", "A assinatura do requerente e condutor devem ser iguais aos dos documentos apresentados.", "warning")
        .then(() => {
            var URL = '@Url.Action("imprimirNA", "ApresentacaoCondutor")?numeroait=' + numeroait;
            window.open(URL, '_blank');
        });
    }


</script>